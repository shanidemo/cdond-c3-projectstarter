---
  - name: create backend directory
    become: yes
    file:
      path: ~/backend
      state: directory
      mode: 0755

  - name: copy backend files
    become: yes
    copy:
      src: ~/project/artifact.tar.gz
      dest: ~/backend/artifact.tar.gz

  - name: unpack backend files
    become: yes
    shell: |
      cd ~/backend
      tar -vxf artifact.tar.gz
      rm -f artifact.tar.gz
  - name: set envs
    become: yes
    shell: |
      export AWS_ACCESS_KEY_ID="AKIAZ74RWVB3HFXOTTGE"
      export AWS_SECRET_ACCESS_KEY="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"
      export AWS_DEFAULT_REGION="us-east-1"
      export TYPEORM_CONNECTION="postgres"
      export TYPEORM_MIGRATIONS_DIR="/root/backend/src/migrations"
      export TYPEORM_ENTITIES="/root/backend/src/modules/domain/**/*.entity.ts"
      export TYPEORM_MIGRATIONS="/root/backend/src/migrations/*.ts"
      export TYPEORM_HOST="udapeople.chynegvijocj.us-east-1.rds.amazonaws.com"
      export TYPEORM_PORT=5432
      export TYPEORM_USERNAME="postgres"
      export TYPEORM_PASSWORD="udapeople123"
      export TYPEORM_DATABASE="postgres"
  - name: start app 
    become: yes
    shell: |
      cd ~/backend
      npm install
      pm2 stop default
      pm2 start npm -- start
  # - name: Copy a "sudoers" file on the remote machine for editing
  #   ansible.builtin.copy:
  #     src: main.js
  #     dest: /main.js
  #     remote_src: yes

  # - name: start app
  #   register: npm_finished
  #   command: pm2 /main.js
  #   ignore_errors: yes

  # # - name: run backend
  #   pm2:
  #     script: /main.js
  #     state: started
        # npm install
        # pm2 stop default
        # pm2 start npm -- start
          # - name: deploy backend